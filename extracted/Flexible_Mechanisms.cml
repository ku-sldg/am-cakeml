(** val certificate_style : coq_Term **)

val certificate_style : coq_Term =
  Coq_att coq_P1 (Coq_lseq (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC
    attest_id [] coq_P1 sys_targ))) (Coq_att coq_P2 (Coq_lseq (Coq_asp (ASPC
    ALL (EXTD (S O)) (Coq_asp_paramsC appraise_id [] coq_P2 sys_targ)))
    (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC certificate_id [] coq_P2
    sys_targ))))))

(** val background_check : coq_Term **)

val background_check : coq_Term =
  Coq_lseq (Coq_att coq_P1 (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC
    attest_id [] coq_P1 sys_targ)))) (Coq_att coq_P2 (Coq_asp (ASPC ALL (EXTD
    (S O)) (Coq_asp_paramsC appraise_id [] coq_P2 sys_targ))))

(** val parallel_mutual_1 : coq_Term **)

val parallel_mutual_1 : coq_Term =
  Coq_att coq_P1 (Coq_lseq (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC
    attest_id [] coq_P1 sys_targ))) (Coq_att coq_P2 (Coq_asp (ASPC ALL (EXTD
    (S O)) (Coq_asp_paramsC appraise_id [] coq_P2 sys_targ)))))

(** val parallel_mutual_2 : coq_Term **)

val parallel_mutual_2 : coq_Term =
  Coq_att coq_P0 (Coq_lseq (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC
    attest_id [] coq_P0 sys_targ))) (Coq_att coq_P2 (Coq_asp (ASPC ALL (EXTD
    (S O)) (Coq_asp_paramsC appraise_id [] coq_P2 sys_targ)))))

(** val layered_background_check : coq_Term **)

val layered_background_check : coq_Term =
  Coq_att coq_P1 (Coq_bpar (ALL, ALL) (Coq_lseq (Coq_att coq_P1 (Coq_asp
    (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC attest_id [] coq_P1 sys_targ))))
    (Coq_lseq (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC attest_id []
    coq_P3 att_targ))) (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC
    attest_id [] coq_P4 att_targ))))) (Coq_bpar (ALL, ALL) (Coq_att coq_P3
    (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC attest_id [] coq_P3
    sys_targ)))) (Coq_lseq (Coq_att coq_P4 (Coq_asp (ASPC ALL (EXTD (S O))
    (Coq_asp_paramsC attest_id [] coq_P4 sys_targ)))) (Coq_att coq_P2
    (Coq_lseq (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC appraise_id []
    coq_P2 it_targ))) (Coq_asp (ASPC ALL (EXTD (S O)) sig_params)))))))

(** val filehash_auth_phrase : coq_Term **)

val filehash_auth_phrase : coq_Term =
  Coq_att coq_P1 (Coq_lseq (Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC
    hashfile_id [] coq_P1 hashfile_targ))) (Coq_asp SIG))

(** val attest_asp : coq_Term **)

val attest_asp : coq_Term =
  Coq_asp (ASPC ALL (EXTD (S O)) (Coq_asp_paramsC attest_id [] coq_P1
    sys_targ))

(** val meas1_phrase : coq_Term **)

val meas1_phrase : coq_Term =
  attest_asp

(** val meas2_phrase : coq_Term **)

val meas2_phrase : coq_Term =
  attest_asp

(** val workstation_phrase : coq_Term **)

val workstation_phrase : coq_Term =
  Coq_bseq (ALL, ALL) (Coq_att coq_P1 meas1_phrase) (Coq_att coq_P2
    meas2_phrase)

(** val flexible_mechanisms_map : (string * coq_Term) list **)

val flexible_mechanisms_map : (string * coq_Term) list =
  ("cert", certificate_style) :: (("bg", background_check) :: (("parmut",
    parallel_mutual_1) :: (("parmut2", parallel_mutual_2) :: (("layered_bg",
    layered_background_check) :: (("filehash",
    filehash_auth_phrase) :: (("workstations", workstation_phrase) :: []))))))

(** val add_evidence_flexible_mechanisms :
    (string, coq_Term * coq_Evidence) coq_MapC **)

val add_evidence_flexible_mechanisms : (string, coq_Term * coq_Evidence)
                                       coq_MapC =
  map_map coq_Eq_Class_ID_Type (fn t => (t, (eval t coq_P0 (Coq_nn O))))
    flexible_mechanisms_map

(** val full_flexible_mechanisms :
    (string, coq_Term * coq_Evidence) coq_MapC **)

val full_flexible_mechanisms : (string, coq_Term * coq_Evidence) coq_MapC =
  add_evidence_flexible_mechanisms
