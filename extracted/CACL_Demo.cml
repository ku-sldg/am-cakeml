(** val cds_config_dir_plc : coq_Plc **)

val cds_config_dir_plc : coq_Plc =
  "cds_config_dir_plc"

(** val cds_query_kim_plc : coq_Plc **)

val cds_query_kim_plc : coq_Plc =
  "cds_query_kim_plc"

(** val kim_evidence_targ : coq_TARG_ID **)

val kim_evidence_targ : coq_TARG_ID =
  "kim_evidence_targ"

(** val ssl_sig_targ : coq_TARG_ID **)

val ssl_sig_targ : coq_TARG_ID =
  "ssl_sig_targ"

(** val cds_config_1_targ : coq_TARG_ID **)

val cds_config_1_targ : coq_TARG_ID =
  "cds_config_1_targ"

(** val cds_config_2_targ : coq_TARG_ID **)

val cds_config_2_targ : coq_TARG_ID =
  "cds_config_2_targ"

(** val cds_config_3_targ : coq_TARG_ID **)

val cds_config_3_targ : coq_TARG_ID =
  "cds_config_3_targ"

(** val cds_img_1_targ : coq_TARG_ID **)

val cds_img_1_targ : coq_TARG_ID =
  "cds_img_1_targ"

(** val cds_img_2_targ : coq_TARG_ID **)

val cds_img_2_targ : coq_TARG_ID =
  "cds_img_2_targ"

(** val cds_img_3_targ : coq_TARG_ID **)

val cds_img_3_targ : coq_TARG_ID =
  "cds_img_3_targ"

(** val query_kim_id : coq_ASP_ID **)

val query_kim_id : coq_ASP_ID =
  "r_invary_get_measurement_id"

(** val hash_file_contents_id : coq_ASP_ID **)

val hash_file_contents_id : coq_ASP_ID =
  "r_hashfile_id"

(** val hash_evidence_id : coq_ASP_ID **)

val hash_evidence_id : coq_ASP_ID =
  "r_hashevidence_id"

(** val gather_file_contents_id : coq_ASP_ID **)

val gather_file_contents_id : coq_ASP_ID =
  "r_readfile_id"

(** val appr_gather_file_contents_id : coq_ASP_ID **)

val appr_gather_file_contents_id : coq_ASP_ID =
  "appraise_r_readfile_id"

(** val appr_hash_file_contents_id : coq_ASP_ID **)

val appr_hash_file_contents_id : coq_ASP_ID =
  "appraise_r_hashfile_id"

(** val provision_id : coq_ASP_ID **)

val provision_id : coq_ASP_ID =
  "r_provision_id"

(** val appr_query_kim_id : coq_ASP_ID **)

val appr_query_kim_id : coq_ASP_ID =
  "appraise_r_invary_get_measurement_id"

(** val appr_query_kim_stub_id : coq_ASP_ID **)

val appr_query_kim_stub_id : coq_ASP_ID =
  "appraise_r_invary_get_measurement_stub_id"

(** val tpm_sig_id : coq_ASP_ID **)

val tpm_sig_id : coq_ASP_ID =
  "r_sig_tpm"

(** val tpm_sig_appr_id : coq_ASP_ID **)

val tpm_sig_appr_id : coq_ASP_ID =
  "appraise_r_sig_tpm"

(** val r_ssl_sig_id : coq_ASP_ID **)

val r_ssl_sig_id : coq_ASP_ID =
  "r_sig"

(** val r_ssl_sig_appr_id : coq_ASP_ID **)

val r_ssl_sig_appr_id : coq_ASP_ID =
  "appraise_r_sig"

(** val gather_targ_asp :
    coq_Plc -> coq_TARG_ID -> string -> string -> coq_Term **)

fun gather_targ_asp targPlc targId path appr_path =
  Coq_asp (ASPC (Coq_asp_paramsC gather_file_contents_id (("filepath",
    path) :: (("filepath-golden", appr_path) :: [])) targPlc targId))

(** val hash_targ_asp :
    coq_Plc -> coq_TARG_ID -> string -> string -> coq_Term **)

fun hash_targ_asp targPlc targId path appr_path =
  Coq_asp (ASPC (Coq_asp_paramsC hash_file_contents_id (("filepath",
    path) :: (("filepath-golden", appr_path) :: [])) targPlc targId))

(** val provision_targ_asp : coq_Plc -> coq_TARG_ID -> string -> coq_Term **)

fun provision_targ_asp targPlc targId path =
  Coq_asp (ASPC (Coq_asp_paramsC provision_id (("filepath", path) :: [])
    targPlc targId))

(** val hash_evidence_asp : coq_Plc -> coq_TARG_ID -> string -> coq_Term **)

fun hash_evidence_asp targPlc targId appr_path =
  Coq_asp (ASPC (Coq_asp_paramsC hash_evidence_id (("filepath-golden",
    appr_path) :: []) targPlc targId))

(** val path_targ1 : string **)

val path_targ1 : string =
  "/LayeredAttestation/src/demo_layered_attestation/cds_config/rewrite_one_config.json"

(** val path_targ1_golden : string **)

val path_targ1_golden : string =
  "/am-cakeml/tests/DemoFiles/goldenFiles/rewrite_one_config.json"

(** val path_micro_targ1 : string **)

val path_micro_targ1 : string =
  "/LayeredAttestation/src/demo_layered_attestation/cds_config/rewrite_one_config.json"

(** val path_micro_targ1_golden : string **)

val path_micro_targ1_golden : string =
  "/am-cakeml/tests/DemoFiles/goldenFiles/rewrite_one_config_hash.json"

(** val path_micro_targ2 : string **)

val path_micro_targ2 : string =
  "/LayeredAttestation/src/demo_layered_attestation/cds_config/filter_one_config.json"

(** val path_micro_targ2_golden : string **)

val path_micro_targ2_golden : string =
  "/am-cakeml/tests/DemoFiles/goldenFiles/filter_one_config_hash.json"

(** val path_micro_composite_golden : string **)

val path_micro_composite_golden : string =
  "/am-cakeml/tests/DemoFiles/goldenFiles/micro_composite.txt"

(** val path_targ2 : string **)

val path_targ2 : string =
  "/LayeredAttestation/src/demo_layered_attestation/cds_config/filter_one_config.json"

(** val path_targ2_golden : string **)

val path_targ2_golden : string =
  "/am-cakeml/tests/DemoFiles/goldenFiles/filter_one_config.json"

(** val gather_config_1 : coq_Term **)

val gather_config_1 : coq_Term =
  gather_targ_asp cds_config_dir_plc cds_config_1_targ path_targ1
    path_targ1_golden

(** val gather_config_2 : coq_Term **)

val gather_config_2 : coq_Term =
  gather_targ_asp cds_config_dir_plc cds_config_2_targ path_targ2
    path_targ2_golden

(** val provision_config_1 : coq_Term **)

val provision_config_1 : coq_Term =
  provision_targ_asp cds_config_dir_plc cds_config_1_targ path_targ1_golden

(** val provision_config_2 : coq_Term **)

val provision_config_2 : coq_Term =
  provision_targ_asp cds_config_dir_plc cds_config_2_targ path_targ2_golden

(** val query_kim_args : coq_ASP_ARGS **)

val query_kim_args : coq_ASP_ARGS =
  (query_kim_dynammic_arg_id,
    query_kim_dynammic_arg_val) :: ((query_kim_appraisal_dir_arg_id,
    query_kim_appraisal_dir_arg_val) :: [])

(** val query_kim_asp : coq_Term **)

val query_kim_asp : coq_Term =
  Coq_asp (ASPC (Coq_asp_paramsC query_kim_id query_kim_args
    cds_query_kim_plc kim_evidence_targ))

(** val r_ssl_sig_asp : coq_Term **)

val r_ssl_sig_asp : coq_Term =
  Coq_asp (ASPC (Coq_asp_paramsC r_ssl_sig_id [] cds_query_kim_plc
    ssl_sig_targ))

(** val r_tpm_sig_asp : coq_Term **)

val r_tpm_sig_asp : coq_Term =
  Coq_asp (ASPC (Coq_asp_paramsC tpm_sig_id [] cds_query_kim_plc
    ssl_sig_targ))
