datatype 'a coq_Stringifiable =
  Build_Stringifiable (('a -> string)) ((string -> ('a, string) coq_ResultT))

(** val coq_Stringifiable_string : string coq_Stringifiable **)

val coq_Stringifiable_string : string coq_Stringifiable =
  Build_Stringifiable (fn s => s) (fn s => Coq_resultC s)

(** val coq_Stringifiable_bool : bool coq_Stringifiable **)

val coq_Stringifiable_bool : bool coq_Stringifiable =
  Build_Stringifiable (fn b => case b of
                                 True => "true"
                               | False => "false") (fn s =>
    (* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

      (fn _ => Coq_errC "Not a boolean")
      (fn a => fn s0 =>
      (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
        (fn b => fn b0 => fn b1 => fn b2 => fn b3 => fn b4 => fn b5 => fn b6 =>
        case b of
          True => Coq_errC "Not a boolean"
        | False =>
          (case b0 of
             True =>
             (case b1 of
                True =>
                (case b2 of
                   True => Coq_errC "Not a boolean"
                 | False =>
                   (case b3 of
                      True => Coq_errC "Not a boolean"
                    | False =>
                      (case b4 of
                         True =>
                         (case b5 of
                            True =>
                            (case b6 of
                               True => Coq_errC "Not a boolean"
                             | False =>
                               ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                  (fn _ => Coq_errC
                                  "Not a boolean")
                                  (fn a0 => fn s1 =>
                                  (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                    (fn b7 => fn b8 => fn b9 => fn b10 => fn b11 => fn b12 => fn b13 => fn b14 =>
                                    case b7 of
                                      True =>
                                      (case b8 of
                                         True => Coq_errC "Not a boolean"
                                       | False =>
                                         (case b9 of
                                            True => Coq_errC "Not a boolean"
                                          | False =>
                                            (case b10 of
                                               True =>
                                               Coq_errC "Not a boolean"
                                             | False =>
                                               (case b11 of
                                                  True =>
                                                  Coq_errC "Not a boolean"
                                                | False =>
                                                  (case b12 of
                                                     True =>
                                                     (case b13 of
                                                        True =>
                                                        (case b14 of
                                                           True =>
                                                           Coq_errC
                                                             "Not a boolean"
                                                         | False =>
                                                           ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                              (fn _ =>
                                                              Coq_errC
                                                              "Not a boolean")
                                                              (fn a1 => fn s2 =>
                                                              (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                                                (fn b15 => fn b16 => fn b17 => fn b18 => fn b19 => fn b20 => fn b21 => fn b22 =>
                                                                case b15 of
                                                                  True =>
                                                                  Coq_errC
                                                                    "Not a boolean"
                                                                | False =>
                                                                  (case b16 of
                                                                     True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                   | False =>
                                                                    (case b17 of
                                                                      True =>
                                                                    (case b18 of
                                                                      True =>
                                                                    (case b19 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b20 of
                                                                      True =>
                                                                    (case b21 of
                                                                      True =>
                                                                    (case b22 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                                    (fn _ =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    (fn a2 => fn s3 =>
                                                                    (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                                                    (fn b23 => fn b24 => fn b25 => fn b26 => fn b27 => fn b28 => fn b29 => fn b30 =>
                                                                    case b23 of
                                                                      True =>
                                                                    (case b24 of
                                                                      True =>
                                                                    (case b25 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b26 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b27 of
                                                                      True =>
                                                                    (case b28 of
                                                                      True =>
                                                                    (case b29 of
                                                                      True =>
                                                                    (case b30 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                                    (fn _ =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    (fn a3 => fn s4 =>
                                                                    (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                                                    (fn b31 => fn b32 => fn b33 => fn b34 => fn b35 => fn b36 => fn b37 => fn b38 =>
                                                                    case b31 of
                                                                      True =>
                                                                    (case b32 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b33 of
                                                                      True =>
                                                                    (case b34 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b35 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b36 of
                                                                      True =>
                                                                    (case b37 of
                                                                      True =>
                                                                    (case b38 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                                    (fn _ =>
                                                                    Coq_resultC
                                                                    False)
                                                                    (fn _ => fn _ =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    s4))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean"))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    a3)
                                                                    s3))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    a2)
                                                                    s2))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean"))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")))
                                                                a1)
                                                              s1))
                                                      | False =>
                                                        Coq_errC
                                                          "Not a boolean")
                                                   | False =>
                                                     Coq_errC "Not a boolean")))))
                                    | False => Coq_errC "Not a boolean")
                                    a0)
                                  s0))
                          | False => Coq_errC "Not a boolean")
                       | False => Coq_errC "Not a boolean")))
              | False => Coq_errC "Not a boolean")
           | False =>
             (case b1 of
                True =>
                (case b2 of
                   True => Coq_errC "Not a boolean"
                 | False =>
                   (case b3 of
                      True =>
                      (case b4 of
                         True =>
                         (case b5 of
                            True =>
                            (case b6 of
                               True => Coq_errC "Not a boolean"
                             | False =>
                               ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                  (fn _ => Coq_errC
                                  "Not a boolean")
                                  (fn a0 => fn s1 =>
                                  (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                    (fn b7 => fn b8 => fn b9 => fn b10 => fn b11 => fn b12 => fn b13 => fn b14 =>
                                    case b7 of
                                      True => Coq_errC "Not a boolean"
                                    | False =>
                                      (case b8 of
                                         True =>
                                         (case b9 of
                                            True => Coq_errC "Not a boolean"
                                          | False =>
                                            (case b10 of
                                               True =>
                                               Coq_errC "Not a boolean"
                                             | False =>
                                               (case b11 of
                                                  True =>
                                                  (case b12 of
                                                     True =>
                                                     (case b13 of
                                                        True =>
                                                        (case b14 of
                                                           True =>
                                                           Coq_errC
                                                             "Not a boolean"
                                                         | False =>
                                                           ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                              (fn _ =>
                                                              Coq_errC
                                                              "Not a boolean")
                                                              (fn a1 => fn s2 =>
                                                              (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                                                (fn b15 => fn b16 => fn b17 => fn b18 => fn b19 => fn b20 => fn b21 => fn b22 =>
                                                                case b15 of
                                                                  True =>
                                                                  (case b16 of
                                                                     True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                   | False =>
                                                                    (case b17 of
                                                                      True =>
                                                                    (case b18 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b19 of
                                                                      True =>
                                                                    (case b20 of
                                                                      True =>
                                                                    (case b21 of
                                                                      True =>
                                                                    (case b22 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                                    (fn _ =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    (fn a2 => fn s3 =>
                                                                    (* If this appears, you're using Ascii internals. Please don't *)
 (fn f => fn c =>
  let val n = Char.ord c in
  let fun h i = (Word8.toInt (Word8.andb (Word8.fromInt n) (Word8.<< (Word8.fromInt 1) i))) <> 0 in
  f (h 0) (h 1) (h 2) (h 3) (h 4) (h 5) (h 6) (h 7)
  end end)
                                                                    (fn b23 => fn b24 => fn b25 => fn b26 => fn b27 => fn b28 => fn b29 => fn b30 =>
                                                                    case b23 of
                                                                      True =>
                                                                    (case b24 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b25 of
                                                                      True =>
                                                                    (case b26 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b27 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    (case b28 of
                                                                      True =>
                                                                    (case b29 of
                                                                      True =>
                                                                    (case b30 of
                                                                      True =>
                                                                    Coq_errC
                                                                    "Not a boolean"
                                                                    | False =>
                                                                    ((* If this appears, you're using String internals. Please don't *)
 (fn f0 => fn f1 => fn s =>
    let val l = String.size s in
    if l = 0 then f0 () else f1 (String.sub s 0) (String.substring s 1 (l-1))
    end)

                                                                    (fn _ =>
                                                                    Coq_resultC
                                                                    True)
                                                                    (fn _ => fn _ =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    s3))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean"))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    a2)
                                                                    s2))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean")
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean"))
                                                                    | False =>
                                                                    Coq_errC
                                                                    "Not a boolean"))
                                                                | False =>
                                                                  Coq_errC
                                                                    "Not a boolean")
                                                                a1)
                                                              s1))
                                                      | False =>
                                                        Coq_errC
                                                          "Not a boolean")
                                                   | False =>
                                                     Coq_errC "Not a boolean")
                                                | False =>
                                                  Coq_errC "Not a boolean")))
                                       | False => Coq_errC "Not a boolean"))
                                    a0)
                                  s0))
                          | False => Coq_errC "Not a boolean")
                       | False => Coq_errC "Not a boolean")
                    | False => Coq_errC "Not a boolean"))
              | False => Coq_errC "Not a boolean")))
        a)
      s)
